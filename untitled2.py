# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/158TQRXdTPiWzED9otrj4ySbX45JfhMDQ
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.cluster import KMeans

# prompt: berikan saya data dari penjual barang yang berupa kondisi barang dan harga barang

import pandas as pd

data = {
    'Kondisi Barang': ['Baru', 'Bekas', 'Baru', 'Bekas', 'Baru', 'Bekas', 'Baru', 'Bekas'],
    'Harga Barang (IDR)': [150000, 80000, 250000, 120000, 500000, 300000, 100000, 40000]
}

df_penjual = pd.DataFrame(data)

df_penjual

x = np.asarray(df_penjual)
print (x)

plt.scatter(x[:,0], x[:,1], label = 'True Position')
plt.xlabel("QTY")
plt.ylabel("Harga")
plt.title("Grafik penyebaran data penjualan")
plt.show()

# prompt: berikan saya kode untuk mengaktifkan k-mens dengan jumlah k-2

# Encode categorical 'Kondisi Barang'
df_penjual['Kondisi Barang Numeric'] = df_penjual['Kondisi Barang'].apply(lambda x: 1 if x == 'Baru' else 0)

# Select features for KMeans
# Using 'Harga Barang (IDR)' and the newly created 'Kondisi Barang Numeric'
X = df_penjual[['Kondisi Barang Numeric', 'Harga Barang (IDR)']].values

# Apply KMeans with k=2
kmeans = KMeans(n_clusters=2, random_state=42, n_init=10) # Added n_init
kmeans.fit(X)

# Get cluster labels and centroids
labels = kmeans.labels_
centroids = kmeans.cluster_centers_

# Add cluster labels to the dataframe
df_penjual['Cluster'] = labels

# Print the dataframe with cluster labels
print(df_penjual)

# Visualize the clusters
plt.scatter(X[:, 0], X[:, 1], c=labels, cmap='viridis', s=50)
plt.scatter(centroids[:, 0], centroids[:, 1], marker='*', s=200, c='red', label='Centroids')
plt.xlabel("Kondisi Barang (0=Bekas, 1=Baru)")
plt.ylabel("Harga Barang (IDR)")
plt.title("Grafik penyebaran data penjualan dengan K-Means (k=2)")
plt.legend()
plt.show()

# prompt: buatkan saya kode untuk menampilkan nilai centroid yang di generate oleh algoritma

print("\nNilai Centroid:")
centroids

# prompt: buatkan saya kode untuk memvisualisasikan hasil klastering data konsumen

# Visualize the clusters with labels based on 'Kondisi Barang'
plt.figure(figsize=(8, 6))
scatter = plt.scatter(df_penjual['Kondisi Barang Numeric'], df_penjual['Harga Barang (IDR)'], c=df_penjual['Cluster'], cmap='viridis', s=50)
plt.scatter(centroids[:, 0], centroids[:, 1], marker='*', s=200, c='red', label='Centroids')

# Create legend based on original 'Kondisi Barang' and cluster labels
legend_labels = {0: 'Bekas', 1: 'Baru'}
handles, original_labels = scatter.legend_elements()
# Corrected the typo from df_penjereditual to df_penjual
clustered_labels = [f'Cluster {i} ({legend_labels[i]})' for i in sorted(df_penjual['Kondisi Barang Numeric'].unique())]
plt.legend(handles, clustered_labels, title="Kondisi Barang dan Cluster")


plt.xlabel("Kondisi Barang (0=Bekas, 1=Baru)")
plt.ylabel("Harga Barang (IDR)")
plt.title("Visualisasi Klastering Data Penjualan Berdasarkan Kondisi Barang dan Harga")
plt.grid(True)
plt.show()

# prompt: berikan saya kode untuk memvisualisasikan hasil klastering dengan centroid dari masing-masing klaster

# Re-visualize the clusters with the corrected legend and centroids
plt.figure(figsize=(8, 6))

# Scatter plot for data points, colored by cluster label
scatter = plt.scatter(df_penjual['Kondisi Barang Numeric'], df_penjual['Harga Barang (IDR)'],
                        c=df_penjual['Cluster'], cmap='viridis', s=50)

# Scatter plot for centroids, using the calculated centroids
plt.scatter(centroids[:, 0], centroids[:, 1], marker='*', s=200, c='red', label='Centroids')

# Create legend handles and labels for the clusters
# We need to create labels that reflect both the cluster number and the dominant 'Kondisi Barang'
# for each cluster (if applicable and meaningful).
# In this case, with k=2 and the features, the clusters likely separate based on 'Kondisi Barang'.
unique_clusters = sorted(df_penjual['Cluster'].unique())
cluster_labels_map = {}
for cluster_id in unique_clusters:
    # Find the dominant 'Kondisi Barang Numeric' in this cluster
    dominant_condition_numeric = df_penjual[df_penjual['Cluster'] == cluster_id]['Kondisi Barang Numeric'].mode()[0]
    condition_text = 'Baru' if dominant_condition_numeric == 1 else 'Bekas'
    cluster_labels_map[cluster_id] = f'Cluster {cluster_id} ({condition_text})'

# Create legend handles and labels from the scatter plot
handles, original_labels = scatter.legend_elements()

# Map the original scatter legend labels (cluster indices) to our descriptive labels
clustered_labels = [cluster_labels_map[int(label.split('{')[1].split('}')[0])] for label in original_labels]

# Add the centroid label
plt.legend(handles + [plt.Line2D([0], [0], marker='*', color='red', linestyle='None', markersize=10)],
           clustered_labels + ['Centroids'],
           title="Klaster")


plt.xlabel("Kondisi Barang (0=Bekas, 1=Baru)")
plt.ylabel("Harga Barang (IDR)")
plt.title("Visualisasi Klastering Data Penjualan Beserta Centroid")
plt.grid(True)
plt.show()

print("\nKoordinat Centroid:")
print(pd.DataFrame(centroids, columns=['Kondisi Barang Numeric', 'Harga Barang (IDR)']))